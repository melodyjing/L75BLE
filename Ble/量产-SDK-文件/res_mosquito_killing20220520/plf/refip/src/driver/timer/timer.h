/**
 ****************************************************************************************
 *
 * @file timer.h
 *
 * @brief TIMER Driver.
 *
 * Copyright (C) RADIAWAVE  2017-2020
 *
 *
 ****************************************************************************************
 */

#ifndef _TIMER_H_
#define _TIMER_H_

/**
 ****************************************************************************************
 * @defgroup TIMER
 * @ingroup DRIVERS
 *
 * @brief Timer driver
 *
 * @{
 *
 ****************************************************************************************
 */

/*
 * INCLUDE FILES
 ****************************************************************************************
 */
#include <stdint.h>      // standard integer definition
#include <stdbool.h>
/*
 * ENUMERATION DEFINITIONS
 *****************************************************************************************
 */



typedef void (*timer_cb) (void);


/*
 * FUNCTION DECLARATIONS
 ****************************************************************************************
 */

/**
 ****************************************************************************************
 * @brief Initialize the timer1 as a count-down counter at 13MHz
 *
 ****************************************************************************************
 */
void timer_init(void);

/**
 ****************************************************************************************
 * @brief Set when the timer should expires (10ms unit)
 *
 * @param to timeout value
 *
 ****************************************************************************************
 */
void timer_set_timeout(uint32_t to, timer_cb cb);


/**
 ****************************************************************************************
 * @brief Set when the timer should expires periodically
 *
 * @note 0 --> disable periodic timeout
 *
 * @param to timeout value (in 1ms unit)
 *
 ****************************************************************************************
 */
void timer_set_periodic_timeout(uint32_t period, timer_cb cb);


/**
 ****************************************************************************************
 * @brief control timer (Enable HW timer)
 *
 * @param enable True to enable the timer, false to disable it
 *
 ****************************************************************************************
 */
void timer_enable(bool enable);

/**
 ****************************************************************************************
 * @brief Retrieve current time
 *
 * @return  current time in 10ms step
 *
 ****************************************************************************************
 */
uint32_t timer_get_time(void);

/**
 ****************************************************************************************
 *  @brief  Handles periodic and programmed timer ISR.
 ****************************************************************************************
 */
void timer_isr(void);

/// @} TIMER

#endif /* _TIMER_H_ */
